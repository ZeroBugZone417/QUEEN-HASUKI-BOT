const config = require('../config');
const { cmd, commands } = require('../command');
const { runtime } = require('../lib/functions');

cmd({
    pattern: "cmd",
    alias: ["allmenu", "fullmenu"],
    use: '.menu2',
    desc: "Show all bot commands",
    category: "menu",
    react: "üìú",
    filename: __filename
}, 
async (conn, mek, m, { from, reply }) => {
    try {
        // Get all commands grouped by category
        const commandList = {};
        for (let c of commands) {
            if (!commandList[c.category]) commandList[c.category] = [];
            commandList[c.category].push(c.pattern);
        }

        // Build the menu text
        let menuText = `‚ï≠‚îÅ‚îÅ„Äî üöÄ *${config.BOT_NAME}* „Äï‚îÅ‚îÅ‚îà‚ä∑
‚îÉ‚óà Owner: *${config.OWNER_NAME}*
‚îÉ‚óà Prefix: *[${config.PREFIX}]*
‚îÉ‚óà Runtime: *${runtime(process.uptime())}*
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑\n`;

        for (let category in commandList) {
            menuText += `\n‚ï≠‚îÅ‚îÅ„Äî ${category.toUpperCase()} „Äï‚îÅ‚îÅ‚îà‚ä∑\n`;
            for (let cmdName of commandList[category]) {
                menuText += `‚îÉ‚Ä¢ ${cmdName}\n`;
            }
            menuText += '‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑\n';
        }

        menuText += `\n> ${config.DESCRIPTION}`;

        await reply(menuText);

    } catch (e) {
        console.log('Menu2 command error:', e);
        reply(`‚ùå Error: ${e.message || e}`);
    }
});
